{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\dnar_test\\\\src\\\\components\\\\landing_page\\\\rate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { btc } from '../redux/actions';\nimport { eth } from '../redux/actions';\nimport { allCoin } from '../redux/actions';\nimport axios from 'axios';\nimport { Baseurl } from '../baseUrl';\nimport Moment from 'react-moment';\nimport NumberFormat from \"react-number-format\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rate = () => {\n  _s();\n\n  const [show, setShow] = useState();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    axios.get(Baseurl, {}).then(res => {\n      if (res.data) {\n        let response = res.data;\n        dispatch(allCoin(response));\n        let btcData = response.find(data => data.name === \"Bitcoin\");\n\n        if (btcData) {\n          dispatch(btc(btcData));\n        }\n\n        let ethData = response.find(data => data.name === \"Ethereum\");\n\n        if (ethData) {\n          dispatch(eth(ethData));\n        }\n      } else {\n        dispatch(btc(null));\n        dispatch(eth(null));\n        dispatch(allCoin(null));\n      }\n    }).catch(error => {\n      console.log(error.response);\n    });\n  }, []);\n  const btcState = useSelector(state => state.btc);\n  const ethState = useSelector(state => state.eth);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"leaders bg-overlay p-3\",\n      \"data-aos\": \"fade-zoom-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        class: \"text-white mb-5\",\n        children: \"Market Leader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"d-flex leaders-coin p-3 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"mb-0 col-3 text-white\",\n          children: \"Bitcoin (BTC)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"mb-0 col-5\",\n          style: {\n            color: '#00FF00'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: parseFloat(btcState.price_change_24h).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-4 text-white text-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"mb-0\",\n            children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n              value: btcState.current_price,\n              displayType: \"text\",\n              thousandSeparator: true,\n              prefix: \"$\",\n              renderText: (value, props) => /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              fontSize: '12px',\n              color: '#251F29'\n            },\n            children: [\"updated: \", /*#__PURE__*/_jsxDEV(Moment, {\n              fromNow: true,\n              children: btcState.last_updated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 78\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"d-flex leaders-coin p-3 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"mb-0 col-3 text-white\",\n          children: \"Ethereum (ETH)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"mb-0 col-5\",\n          style: {\n            color: '#00FF00'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: parseFloat(ethState.price_change_24h).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"mb-0 col-4 text-white text-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"mb-0\",\n            children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n              value: ethState.current_price,\n              displayType: \"text\",\n              thousandSeparator: true,\n              prefix: \"$\",\n              renderText: (value, props) => /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              fontSize: '12px',\n              color: '#251F29'\n            },\n            children: [\"updated: \", /*#__PURE__*/_jsxDEV(Moment, {\n              fromNow: true,\n              children: ethState.last_updated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 78\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Rate, \"FCFoaDmZy+xRbo++MoC9dvj9YRU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Rate;\nexport default Rate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rate\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/dnar_test/src/components/landing_page/rate.js"],"names":["React","useEffect","useDispatch","useSelector","btc","eth","allCoin","axios","Baseurl","Moment","NumberFormat","Rate","show","setShow","useState","dispatch","get","then","res","data","response","btcData","find","name","ethData","catch","error","console","log","btcState","state","ethState","color","parseFloat","price_change_24h","toFixed","current_price","value","props","fontSize","last_updated"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { btc } from '../redux/actions'\r\nimport { eth } from '../redux/actions'\r\nimport { allCoin } from '../redux/actions'\r\nimport axios from 'axios'\r\nimport { Baseurl } from '../baseUrl'\r\nimport Moment from 'react-moment'\r\nimport NumberFormat from \"react-number-format\";\r\n\r\n\r\n\r\nconst Rate = () => {\r\n  const [show, setShow] = useState();\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n    axios.get(Baseurl, {}).then((res)=>{\r\n      if(res.data){\r\n        let response = res.data;\r\n        dispatch(allCoin(response))\r\n        let btcData = response.find(\r\n          (data) => data.name === \"Bitcoin\"\r\n        );\r\n        if(btcData){\r\n        dispatch(btc(btcData))\r\n        }\r\n       \r\n        let ethData = response.find(\r\n          (data) => data.name === \"Ethereum\"\r\n        );\r\n        if(ethData){\r\n        dispatch(eth(ethData))\r\n        }\r\n      }else{\r\n        dispatch(btc(null))\r\n        dispatch(eth(null))\r\n        dispatch(allCoin(null))\r\n      }\r\n        }).catch((error)=>{\r\n          console.log(error.response)\r\n\r\n        })\r\n    }, [])\r\n\r\nconst btcState = useSelector(state => state.btc)\r\nconst ethState = useSelector(state => state.eth)\r\n\r\n    return (\r\n        <React.Fragment>\r\n             <div class=\"leaders bg-overlay p-3\" data-aos=\"fade-zoom-in\">\r\n              <h2 class=\"text-white mb-5\">Market Leader</h2>\r\n\r\n              <div class=\"d-flex leaders-coin p-3 mb-3\">\r\n                <div class=\"mb-0 col-3 text-white\">Bitcoin (BTC)</div>\r\n                <div class=\"mb-0 col-5\" style={{color:'#00FF00'}}><small>{parseFloat(btcState.price_change_24h).toFixed(2)}</small></div>\r\n                <div class=\"col-4 text-white text-end\">\r\n                  <h4 class=\"mb-0\">\r\n                  <NumberFormat\r\n                      value={btcState.current_price}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      prefix={\"$\"}\r\n                      renderText={(value, props) => (\r\n                        <div {...props}>{value}</div>\r\n                      )}\r\n                    /></h4>\r\n                  <small style={{fontSize:'12px', color:'#251F29'}}>updated: <Moment fromNow>{btcState.last_updated}</Moment></small>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"d-flex leaders-coin p-3 mb-3\">\r\n                <div class=\"mb-0 col-3 text-white\">Ethereum (ETH)</div>\r\n                <div class=\"mb-0 col-5\" style={{color:'#00FF00'}}><small>{parseFloat(ethState.price_change_24h).toFixed(2)}</small></div>\r\n                <div class=\"mb-0 col-4 text-white text-end\">\r\n                  <h4 class=\"mb-0\"><NumberFormat\r\n                      value={ethState.current_price}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      prefix={\"$\"}\r\n                      renderText={(value, props) => (\r\n                        <div {...props}>{value}</div>\r\n                      )}\r\n                    /></h4>\r\n                  <small style={{fontSize:'12px', color:'#251F29'}}>updated: <Moment fromNow>{ethState.last_updated}</Moment></small>\r\n            \r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Rate;\r\n"]},"metadata":{},"sourceType":"module"}