{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\dnar_test\\\\src\\\\components\\\\landing_page\\\\rate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { btc } from \"../redux/actions\";\nimport { eth } from \"../redux/actions\";\nimport { allCoin } from \"../redux/actions\";\nimport axios from \"axios\";\nimport { Baseurl } from \"../baseUrl\";\nimport Moment from \"react-moment\";\nimport NumberFormat from \"react-number-format\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Rate = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    axios.get(Baseurl, {}).then(res => {\n      if (res.data) {\n        let response = res.data;\n        dispatch(allCoin(response));\n        let btcData = response.find(data => data.name === \"Bitcoin\");\n\n        if (btcData) {\n          dispatch(btc(btcData));\n        }\n\n        let ethData = response.find(data => data.name === \"Ethereum\");\n\n        if (ethData) {\n          dispatch(eth(ethData));\n        }\n      } else {\n        dispatch(btc(null));\n        dispatch(eth(null));\n        dispatch(allCoin(null));\n      }\n    }).catch(error => {\n      console.log(error.response);\n    });\n  }, []);\n  const btcState = useSelector(state => state.btc);\n  const ethState = useSelector(state => state.eth);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"leaders bg-overlay p-3\",\n      \"data-aos\": \"fade-zoom-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        class: \"text-white mb-5\",\n        children: \"Market Leader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"d-flex leaders-coin p-3 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"mb-0 col-3 text-white\",\n          children: \"Bitcoin (BTC)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"mb-0 col-5\",\n          style: {\n            color: \"#00FF00\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: btcState ? parseFloat(btcState.price_change_24h).toFixed(2) : /*#__PURE__*/_jsxDEV(SkeletonTheme, {\n              color: \"#251F29\",\n              highlightColor: \"#444\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                  count: 1,\n                  width: 70\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-4 text-white text-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"mb-0\",\n            children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n              value: btcState.current_price,\n              displayType: \"text\",\n              thousandSeparator: true,\n              prefix: \"$\",\n              renderText: (value, props) => /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              fontSize: \"12px\",\n              color: \"#251F29\"\n            },\n            children: btcState ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"updated: \", /*#__PURE__*/_jsxDEV(Moment, {\n                fromNow: true,\n                children: btcState.last_updated\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(SkeletonTheme, {\n              color: \"#251F29\",\n              highlightColor: \"#444\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                  count: 1,\n                  width: 70\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"d-flex leaders-coin p-3 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"mb-0 col-3 text-white\",\n          children: \"Ethereum (ETH)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"mb-0 col-5\",\n          style: {\n            color: \"#00FF00\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: ethState ? parseFloat(ethState.price_change_24h).toFixed(2) : /*#__PURE__*/_jsxDEV(SkeletonTheme, {\n              color: \"#251F29\",\n              highlightColor: \"#444\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                  count: 1,\n                  width: 70\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"mb-0 col-4 text-white text-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"mb-0\",\n            children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n              value: ethState.current_price,\n              displayType: \"text\",\n              thousandSeparator: true,\n              prefix: \"$\",\n              renderText: (value, props) => /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              fontSize: \"12px\",\n              color: \"#251F29\"\n            },\n            children: ethState ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"updated: \", /*#__PURE__*/_jsxDEV(Moment, {\n                fromNow: true,\n                children: ethState.last_updated\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(SkeletonTheme, {\n              color: \"#251F29\",\n              highlightColor: \"#444\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                  count: 1,\n                  width: 70\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Rate, \"PcGJEUjQ5cCUJ9PXe+ehuhOFkzY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Rate;\nexport default Rate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rate\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/dnar_test/src/components/landing_page/rate.js"],"names":["React","useEffect","useDispatch","useSelector","btc","eth","allCoin","axios","Baseurl","Moment","NumberFormat","Skeleton","SkeletonTheme","Rate","dispatch","get","then","res","data","response","btcData","find","name","ethData","catch","error","console","log","btcState","state","ethState","color","parseFloat","price_change_24h","toFixed","current_price","value","props","fontSize","last_updated"],"mappings":"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","sourcesContent":["import React, { useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { btc } from \"../redux/actions\";\r\nimport { eth } from \"../redux/actions\";\r\nimport { allCoin } from \"../redux/actions\";\r\nimport axios from \"axios\";\r\nimport { Baseurl } from \"../baseUrl\";\r\nimport Moment from \"react-moment\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\nconst Rate = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    axios\r\n      .get(Baseurl, {})\r\n      .then((res) => {\r\n        if (res.data) {\r\n          let response = res.data;\r\n          dispatch(allCoin(response));\r\n          let btcData = response.find((data) => data.name === \"Bitcoin\");\r\n          if (btcData) {\r\n            dispatch(btc(btcData));\r\n          }\r\n\r\n          let ethData = response.find((data) => data.name === \"Ethereum\");\r\n          if (ethData) {\r\n            dispatch(eth(ethData));\r\n          }\r\n        } else {\r\n          dispatch(btc(null));\r\n          dispatch(eth(null));\r\n          dispatch(allCoin(null));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }, []);\r\n\r\n  const btcState = useSelector((state) => state.btc);\r\n  const ethState = useSelector((state) => state.eth);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div class=\"leaders bg-overlay p-3\" data-aos=\"fade-zoom-in\">\r\n        <h2 class=\"text-white mb-5\">Market Leader</h2>\r\n\r\n        <div class=\"d-flex leaders-coin p-3 mb-3\">\r\n          <div class=\"mb-0 col-3 text-white\">Bitcoin (BTC)</div>\r\n          <div class=\"mb-0 col-5\" style={{ color: \"#00FF00\" }}>\r\n            <small>\r\n              {btcState ?  (\r\n                parseFloat(btcState.price_change_24h).toFixed(2)\r\n              ):(\r\n                <SkeletonTheme color=\"#251F29\" highlightColor=\"#444\">\r\n                  <small>\r\n                    <Skeleton count={1} width={70} />\r\n                  </small>\r\n                </SkeletonTheme>\r\n              ) }\r\n            </small>\r\n          </div>\r\n          <div class=\"col-4 text-white text-end\">\r\n            <h4 class=\"mb-0\">\r\n              <NumberFormat\r\n                value={btcState.current_price}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={\"$\"}\r\n                renderText={(value, props) => <div {...props}>{value}</div>}\r\n              />\r\n            </h4>\r\n            <small style={{ fontSize: \"12px\", color: \"#251F29\" }}>\r\n              {btcState ? (\r\n                <>\r\n                  updated: <Moment fromNow>{btcState.last_updated}</Moment>\r\n                </>\r\n              ):(\r\n                <SkeletonTheme color=\"#251F29\" highlightColor=\"#444\">\r\n                  <small>\r\n                    <Skeleton count={1} width={70} />\r\n                  </small>\r\n                </SkeletonTheme>\r\n              )}\r\n            </small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"d-flex leaders-coin p-3 mb-3\">\r\n          <div class=\"mb-0 col-3 text-white\">Ethereum (ETH)</div>\r\n          <div class=\"mb-0 col-5\" style={{ color: \"#00FF00\" }}>\r\n            <small>\r\n              {ethState ? (\r\n                parseFloat(ethState.price_change_24h).toFixed(2)\r\n              ) : (\r\n                <SkeletonTheme color=\"#251F29\" highlightColor=\"#444\">\r\n                  <small>\r\n                    <Skeleton count={1} width={70} />\r\n                  </small>\r\n                </SkeletonTheme>\r\n              )}\r\n            </small>\r\n          </div>\r\n          <div class=\"mb-0 col-4 text-white text-end\">\r\n            <h4 class=\"mb-0\">\r\n              <NumberFormat\r\n                value={ethState.current_price}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={\"$\"}\r\n                renderText={(value, props) => <div {...props}>{value}</div>}\r\n              />\r\n            </h4>\r\n            <small style={{ fontSize: \"12px\", color: \"#251F29\" }}>\r\n              {ethState ?   (\r\n                <>\r\n                  updated: <Moment fromNow>{ethState.last_updated}</Moment>\r\n                </>\r\n              ):(\r\n                <SkeletonTheme color=\"#251F29\" highlightColor=\"#444\">\r\n                  <small>\r\n                    <Skeleton count={1} width={70} />\r\n                  </small>\r\n                </SkeletonTheme>\r\n              )}\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Rate;\r\n"]},"metadata":{},"sourceType":"module"}